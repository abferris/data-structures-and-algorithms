'use strict';
let sudoku = require('../sudoku.js')
let test1 = [[".",".",".","1","4",".",".","2","."], 
             [".",".","6",".",".",".",".",".","."], 
             [".",".",".",".",".",".",".",".","."], 
             [".",".","1",".",".",".",".",".","."], 
             [".","6","7",".",".",".",".",".","9"], 
             [".",".",".",".",".",".","8","1","."], 
             [".","3",".",".",".",".",".",".","6"], 
             [".",".",".",".",".","7",".",".","."], 
             [".",".",".","5",".",".",".","7","."]]
let test2 = [[".",".",".",".","2",".",".","9","."], 
             [".",".",".",".","6",".",".",".","."], 
             ["7","1",".",".","7","5",".",".","."], 
             [".","7",".",".",".",".",".",".","."], 
             [".",".",".",".","8","3",".",".","."], 
             [".",".","8",".",".","7",".","6","."], 
             [".",".",".",".",".","2",".",".","."], 
             [".","1",".","2",".",".",".",".","."], 
             [".","2",".",".","3",".",".",".","."]]
let test3 = [[".",".","4",".",".",".","6","3","."], 
             [".",".",".",".",".",".",".",".","."], 
             ["5",".",".",".",".",".",".","9","."], 
             [".",".",".","5","6",".",".",".","."], 
             ["4",".","3",".",".",".",".",".","1"], 
             [".",".",".","7",".",".",".",".","."], 
             [".",".",".","5",".",".",".",".","."], 
             [".",".",".",".",".",".",".",".","."], 
             [".",".",".",".",".",".",".",".","."]]
let test4 = [[".",".",".",".",".",".",".",".","2"], 
             [".",".",".",".",".",".","6",".","."], 
             [".",".","1","4",".",".","8",".","."], 
             [".",".",".",".",".",".",".",".","."], 
             [".",".",".",".",".",".",".",".","."], 
             [".",".",".",".","3",".",".",".","."], 
             ["5",".","8","6",".",".",".",".","."], 
             [".","9",".",".",".",".","4",".","."], 
             [".",".",".",".","5",".",".",".","."]]
let test5 =[[".","9",".",".","4",".",".",".","."], 
             ["1",".",".",".",".",".","6",".","."], 
             [".",".","3",".",".",".",".",".","."], 
             [".",".",".",".",".",".",".",".","."], 
             [".",".",".","7",".",".",".",".","."], 
             ["3",".",".",".","5",".",".",".","."], 
             [".",".","7",".",".","4",".",".","."], 
             [".",".",".",".",".",".",".",".","."], 
             [".",".",".",".","7",".",".",".","."]]
let test6 = [["7",".",".",".","4",".",".",".","."], 
             [".",".",".","8","6","5",".",".","."], 
             [".","1",".","2",".",".",".",".","."], 
             [".",".",".",".",".","9",".",".","."], 
             [".",".",".",".","5",".","5",".","."], 
             [".",".",".",".",".",".",".",".","."], 
             [".",".",".",".",".",".","2",".","."], 
             [".",".",".",".",".",".",".",".","."], 
             [".",".",".",".",".",".",".",".","."]]
let test7 = [[".","4",".",".",".",".",".",".","."], 
             [".",".","4",".",".",".",".",".","."], 
             [".",".",".","1",".",".","7",".","."], 
             [".",".",".",".",".",".",".",".","."], 
             [".",".",".","3",".",".",".","6","."], 
             [".",".",".",".",".","6",".","9","."], 
             [".",".",".",".","1",".",".",".","."], 
             [".",".",".",".",".",".","2",".","."], 
             [".",".",".","8",".",".",".",".","."]]
let test8 = [[".",".","5",".",".",".",".",".","."], 
             [".",".",".","8",".",".",".","3","."], 
             [".","5",".",".","2",".",".",".","."], 
             [".",".",".",".",".",".",".",".","."], 
             [".",".",".",".",".",".",".",".","9"], 
             [".",".",".",".",".",".","4",".","."], 
             [".",".",".",".",".",".",".",".","7"], 
             [".","1",".",".",".",".",".",".","."], 
             ["2","4",".",".",".",".","9",".","."]]
let test9 = [["1","2","3","4","5","6","7","8","9"], 
             ["4","5","6","7","8","9","1","2","3"], 
             ["7","8","9","1","2","3","4","5","6"], 
             ["2","3","4","5","6","7","8","9","1"], 
             ["5","6","7","8","9","1","2","3","4"], 
             ["8","9","1","2","3","4","5","6","7"], 
             ["3","4","5","6","7","8","9","1","2"], 
             ["6","7","8","9","1","2","3","4","5"], 
             ["9","1","2","3","4","5","6","7","8"]]
let test10 = [[".",".",".",".",".",".",".",".","."], 
              [".",".",".",".",".",".",".",".","."], 
              [".",".",".",".",".",".",".",".","."], 
              [".",".",".",".",".",".",".",".","."], 
              [".",".",".",".",".",".",".",".","."], 
              [".",".",".",".",".",".",".",".","."], 
              [".",".",".",".",".",".",".",".","."], 
              [".",".",".",".",".",".",".",".","."], 
              [".",".",".",".",".",".",".",".","."]]


describe('Sudoku Function', () => {

  it('CodeSignal 1 will recognize no repeats with holes and return true', () => {
    expect(sudoku(test1)).toEqual(true)
  })

  it('CodeSignal 2 will recognize same row and return false', () => {
    expect(sudoku(test2)).toEqual(false)
  })

  it('CodeSignal 3 will recognize same column and return false', () => {
    expect(sudoku(test3)).toEqual(false)
  })

  it('CodeSignal 4 will recognize no repeats with holes 2', () => {
    expect(sudoku(test4)).toEqual(true)
  })

  it('CodeSignal 5 will recognize no repeats with holes 3', () => {
    expect(sudoku(test5)).toEqual(true)
  })

  it('CodeSignal 6 will recognize same row and return false 2', () => {
    expect(sudoku(test6)).toEqual(false)
  })

  it('CodeSignal 7 will recognize same quadrant and return false', () => {
    expect(sudoku(test7)).toEqual(false)
  })

  it('CodeSignal 8 will recognize same quadrant and return false2', () => {
    expect(sudoku(test8)).toEqual(false)
  })

  it('will work for a fully laid out board', () => {
    expect(sudoku(test9)).toEqual(true)
  })

  it('will work for an empty board', () => {
    expect(sudoku(test10)).toEqual(true)
  })

})